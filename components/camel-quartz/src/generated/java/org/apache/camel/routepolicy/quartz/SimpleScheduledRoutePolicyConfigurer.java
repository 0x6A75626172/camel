/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.routepolicy.quartz;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.routepolicy.quartz.SimpleScheduledRoutePolicy;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class SimpleScheduledRoutePolicyConfigurer extends org.apache.camel.support.component.PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        org.apache.camel.routepolicy.quartz.SimpleScheduledRoutePolicy target = (org.apache.camel.routepolicy.quartz.SimpleScheduledRoutePolicy) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "routeresumerepeatcount":
        case "RouteResumeRepeatCount": target.setRouteResumeRepeatCount(property(camelContext, int.class, value)); return true;
        case "routeresumerepeatinterval":
        case "RouteResumeRepeatInterval": target.setRouteResumeRepeatInterval(property(camelContext, long.class, value)); return true;
        case "routestartrepeatcount":
        case "RouteStartRepeatCount": target.setRouteStartRepeatCount(property(camelContext, int.class, value)); return true;
        case "routestartrepeatinterval":
        case "RouteStartRepeatInterval": target.setRouteStartRepeatInterval(property(camelContext, long.class, value)); return true;
        case "routestopgraceperiod":
        case "RouteStopGracePeriod": target.setRouteStopGracePeriod(property(camelContext, int.class, value)); return true;
        case "routestoprepeatcount":
        case "RouteStopRepeatCount": target.setRouteStopRepeatCount(property(camelContext, int.class, value)); return true;
        case "routestoprepeatinterval":
        case "RouteStopRepeatInterval": target.setRouteStopRepeatInterval(property(camelContext, long.class, value)); return true;
        case "routesuspendrepeatcount":
        case "RouteSuspendRepeatCount": target.setRouteSuspendRepeatCount(property(camelContext, int.class, value)); return true;
        case "routesuspendrepeatinterval":
        case "RouteSuspendRepeatInterval": target.setRouteSuspendRepeatInterval(property(camelContext, long.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "routeresumerepeatcount":
        case "RouteResumeRepeatCount": return int.class;
        case "routeresumerepeatinterval":
        case "RouteResumeRepeatInterval": return long.class;
        case "routestartrepeatcount":
        case "RouteStartRepeatCount": return int.class;
        case "routestartrepeatinterval":
        case "RouteStartRepeatInterval": return long.class;
        case "routestopgraceperiod":
        case "RouteStopGracePeriod": return int.class;
        case "routestoprepeatcount":
        case "RouteStopRepeatCount": return int.class;
        case "routestoprepeatinterval":
        case "RouteStopRepeatInterval": return long.class;
        case "routesuspendrepeatcount":
        case "RouteSuspendRepeatCount": return int.class;
        case "routesuspendrepeatinterval":
        case "RouteSuspendRepeatInterval": return long.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        org.apache.camel.routepolicy.quartz.SimpleScheduledRoutePolicy target = (org.apache.camel.routepolicy.quartz.SimpleScheduledRoutePolicy) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "routeresumerepeatcount":
        case "RouteResumeRepeatCount": return target.getRouteResumeRepeatCount();
        case "routeresumerepeatinterval":
        case "RouteResumeRepeatInterval": return target.getRouteResumeRepeatInterval();
        case "routestartrepeatcount":
        case "RouteStartRepeatCount": return target.getRouteStartRepeatCount();
        case "routestartrepeatinterval":
        case "RouteStartRepeatInterval": return target.getRouteStartRepeatInterval();
        case "routestopgraceperiod":
        case "RouteStopGracePeriod": return target.getRouteStopGracePeriod();
        case "routestoprepeatcount":
        case "RouteStopRepeatCount": return target.getRouteStopRepeatCount();
        case "routestoprepeatinterval":
        case "RouteStopRepeatInterval": return target.getRouteStopRepeatInterval();
        case "routesuspendrepeatcount":
        case "RouteSuspendRepeatCount": return target.getRouteSuspendRepeatCount();
        case "routesuspendrepeatinterval":
        case "RouteSuspendRepeatInterval": return target.getRouteSuspendRepeatInterval();
        default: return null;
        }
    }
}

